#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    # log         127.0.0.1 local2

    # chroot      /var/lib/haproxy
    # pidfile     /var/run/haproxy.pid
    maxconn     100
    # user        haproxy
    # group       haproxy
    # daemon

    # turn on stats unix socket
    # stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    # mode                    http
    mode                    tcp
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 2
    timeout http-request    10s
    timeout queue           1m
    timeout connect         4s
    timeout client          30m
    timeout server          30m
    timeout http-keep-alive 10s
    timeout check           5s
    # maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
# frontend  main *:5000
#     acl url_static       path_beg       -i /static /images /javascript /stylesheets
#     acl url_static       path_end       -i .jpg .gif .png .css .js

#     use_backend static          if url_static
#     default_backend             app

listen stats
    mode http
    bind *:7000
    stats enable
    stats uri /

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
# backend static
#     balance     roundrobin
#     server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
# backend app
#     balance     roundrobin
#     server  app1 127.0.0.1:5001 check
#     server  app2 127.0.0.1:5002 check
#     server  app3 127.0.0.1:5003 check
#     server  app4 127.0.0.1:5004 check

listen postgres
    bind *:5000
    option httpchk
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    server postgresql_001 timescaledb:5432 maxconn 100 check port 8008
    # server postgresql_002 timescaledb2:5432 maxconn 100 check port 8008
    # server postgresql_003 timescaledb3:5432 maxconn 100 check port 8008
